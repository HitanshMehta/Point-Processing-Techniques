# -*- coding: utf-8 -*-
"""Point Processing techniques.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cJoUu8yPQFkBt927UlL7ox_Gy1uYLayy
"""

import cv2
import numpy as np
from google.colab.patches import cv2_imshow

img = cv2.imread('/content/image.jpg')

cv2_imshow(img)

gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
gray2 = gray

cv2_imshow(gray)

L = 256
S = (L-1)- gray
cv2_imshow(S)

H,W,_ = img.shape

for i in range(H-1):
  for j in range(W-1):
    gray2[i][j] = 255 - gray[i][j]

cv2_imshow(gray2)

thresh_img = gray

thresh = 130
for i in range(H-1):
  for j in range(W-1):
    if(gray[i][j] > thresh):
      thresh_img[i][j]=0
    else:
      thresh_img[i][j]=255

cv2_imshow(thresh_img)

lower_gray_value=100
upper_gray_value=200

sliced_img = gray
for i in range(H-1):
  for j in range(W-1):
    if(gray[i][j] > lower_gray_value and gray[i][j] < upper_gray_value):
      sliced_img[i][j]=255
    else:
      sliced_img[i][j]=0


cv2_imshow(sliced_img)

sliced_img2 = gray
for i in range(H-1):
  for j in range(W-1):
    if(gray[i][j] > lower_gray_value and gray[i][j] <= upper_gray_value):
      sliced_img2[i][j]=255
    else:
      sliced_img2[i][j]=gray[i][j]

cv2_imshow(sliced_img2)